# Default values for drupal.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: quay.io/afnan_abdelhameed/ld-ihf-edu
  pullPolicy: IfNotPresent
  tag: "3.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Database Credentials.
mysql:
  auth:
    database: ihf-education
    rootPassword: root
#    username: edu-user
#    password: password
  fullnameOverride: ihf-edu-mysql # the name that tha app will use to communicate with
  primary:
    service:
      type: NodePort
      nodePort: 32762
    livenessProbe:
      initialDelaySeconds: 600
    # check https://dev.to/tylerauerbeck/deploying-bitnami-s-postgres-helm-chart-on-openshift-1mcl
    # TODO: note to deploy multiple pods if you face same issue use secondary
    podSecurityContext:
      enabled: false
    containerSecurityContext:
      enabled: false


#  primary:
#    service:
#      type: NodePort
#      nodePort: 32762
#  fullnameOverride: creditagricole-mysql # change service name
#  initdbScriptsConfigMap: cae-initdb-config

#healthCheck:
#  readiness: http://:32761/wp/wp-admin
#  liveness: http://:32761/wp/wp-admin


# -------------------------------------
# Environment Variables
# -------------------------------------
env:
 - name: "QUOTES_HOSTNAME"
   value: "famousapp-mariadb"
 - name: "QUOTES_DATABASE"
   value: "quotesdb"
 - name: "QUOTES_USER"
   value: "quotes"
 - name: "QUOTES_PASSWORD"
   value: "quotespwd"


# -------------------------------------
# persistence volumes
# -------------------------------------
persistence:
  ## @param persistence.storageClass PVC Storage Class for Drupal volume
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass: ""
  ## @param persistence.accessModes PVC Access Mode for Drupal volume
  ## If defined, PVC must be created manually before volume will be bound
  ##
  accessModes:
    - ReadWriteOnce
  ## @param persistence.size PVC Storage Request for Drupal volume
  ##
  size: 8Gi
  ## @param persistence.existingClaim A manually managed Persistent Volume Claim
  ## If defined, PVC must be created manually before volume will be bound
  ##
  existingClaim: ""
  ## @param persistence.hostPath If defined, the drupal-data volume will mount to the specified hostPath.
  hostPath: "/drupal-data" #The directory in your node.